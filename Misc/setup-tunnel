#!/bin/bash 

 # script: setup-tunnel
 # Project: SharedAppVnc
 #
 # Copyright (C) 2005 Grant Wallace, Princeton University. All Rights Reserved.
 #
 #  This is free software; you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
 #  the Free Software Foundation; either version 2 of the License, or
 #  (at your option) any later version.
 #
 #  This software is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #  GNU General Public License for more details.
 #
 #  You should have received a copy of the GNU General Public License
 #  along with this software; if not, write to the Free Software
 #  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,
 #  USA.

for arg in $*
do
    shift
    if [ $arg = "-in" ]; then
      in=$1
    fi
    if [ $arg = "-out" ]; then
      out=$1
    fi
    if [ $arg = "-opts" ]; then
      sshopts=$1
    fi
done

if [ ! $in ]; then
  echo "Usage: $0 -in localPort:commonHost:inTunnelPort -out localPort:commonHost:outTunnelPort [-opts ssh-options]"
  exit 0;
fi

if [ ! $out ]; then
  echo "Usage: $0 -in localPort:commonHost:inTunnelPort -out localPort:commonHost:outTunnelPort [-opts ssh-options]"
  exit 0;
fi

#inHost=`expr "$in" : '\(.*\):'`;
#inport=`expr "$in" : '.*:\(.*\)'`;
#outHost=`expr "$out" : '\(.*\):'`;
#outport=`expr "$out" : '.*:\(.*\)'`;

inLocalPort=`expr "$in" : '\([0-9]*\)'`;
outLocalPort=`expr "$out" : '\([0-9]*\)'`;
inHost=`expr "$in" : '[0-9:]*\(.*\):'`;
outHost=`expr "$out" : '[0-9:]*\(.*\):'`;
inTunnelPort=`expr "$in" : '.*:\(.*\)'`;
outTunnelPort=`expr "$out" : '.*:\(.*\)'`;

if [ -z $outLocalPort ]; then
  outLocalPort=$outTunnelPort
fi
if [ -z $inLocalPort ]; then
  inLocalPort=5500
  #inLocalPort=$inTunnelPort
fi

echo "Setting up tunnels"
echo "IN: $inLocalPort:$inHost:$inTunnelPort"
echo "OUT: $outLocalPort:$outHost:$outTunnelPort"

# set up incomming tunnel
echo ssh $sshopts -g -f -N -R $inTunnelPort:localhost:$inLocalPort $inHost 
ssh $sshopts -g -f -N -R $inTunnelPort:localhost:$inLocalPort $inHost 

# set up outgoing tunnel
echo ssh $sshopts -g -f -N -L $outLocalPort:localhost:$outTunnelPort $outHost 
ssh $sshopts -g -f -N -L $outLocalPort:localhost:$outTunnelPort $outHost 

exit 0;
